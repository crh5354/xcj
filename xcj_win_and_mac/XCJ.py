#_*_encoding:utf-8_*_
#!/usr/bin/env python 
#coding=utf-8 

#/**
# * Created by Crh.
# * User: Crh
# * Date: 15-8-10
# * Time: 下午3:40
# */
# -- 搜索文件里面的所有xlsx文件转换为json文件 --
# -- 配置转换 -- 

import json
import os
import shutil
import xlrd
import sys
import Tkinter
import tkMessageBox
import tkFileDialog 
from Tkinter import *
reload(sys)
sys.setdefaultencoding( "utf-8" )

#-- 搜索xlsx文件的路径
#-- Search xlsx file path
Target_Path = '/Users/rains/PycharmProjects/untitled/123'
#-- 生成json存放的路径
#-- The path generated by JSON
Final_Path = '/Users/rains/PycharmProjects/untitled/data'

imgfiles = []
all_json = []

top = Tkinter.Tk()
var1=StringVar()
var2=StringVar()

#写入json文件
def store_to_path(spath, measurements):
    with open(spath, 'w') as f:
        f.write(json.dumps(measurements, ensure_ascii=False))
        print spath,' Complete!'

#xlsx数据转json格式
def xlsxChangeJson( table ):
    json_data = []
    for i in range( 1, table.nrows ):
        data = {}
        for j in range( 0, table.ncols ):
            data[ table.row_values(0)[j] ] = table.row_values(i)[j]
        # print data
        json_data.append( data )
    # print json_data
    return json_data

#搜索xlsx路径
def search_file( str ):
    global Target_Path
    global imgfiles
    for path, dirs, files in os.walk(Target_Path):
        imgfiles.extend([os.path.join(path, f) for f in files if f.endswith(str)])

def retreeExceptionHandler( fun, path, excinfo ):
    print("Error:" + path)
    print(excinfo[1])
  
 #拷贝新的路径
def arrangement_file():
    global Target_Path
    global Final_Path
    shutil.rmtree( Final_Path, ignore_errors=False, onerror=retreeExceptionHandler)
    sp1 = Target_Path
    sp2 = Final_Path
    shutil.copytree(sp1, sp2)
    for root, dirs, files in os.walk(Final_Path, topdown=False):
        for name in files:
            os.remove(os.path.join(root, name))

def createJson():
    # print var1.get()
    # print var2.get()
    if os.path.exists( var1.get() ) == False:
        tkMessageBox.showinfo( "错误", "目标路径不存在或者格式错误")
        return
    if os.path.exists( var2.get() ) == False:
        tkMessageBox.showinfo( "错误", "保存路径不存在或者格式错误")
        return
    myMain(var1.get(), var2.get())
    tkMessageBox.showinfo( "Tips", "生成json文件完毕")

def choiceDirectory():
    filename = tkFileDialog.askdirectory(parent=top,initialdir="/",title='Pick a directory')
    var1.set( filename )

def saveDirectory():
    filename = tkFileDialog.askdirectory(parent=top,initialdir="/",title='Pick a directory')
    var2.set( filename )

def showTips():
    tkMessageBox.showinfo( "说明", "批量excel转json功能是把目标文件夹下的所有excel文件(包挂文件夹下的子文件)(文件格式.xls .xlsx)转化为json文件")

def initUI():

    top.title("批量excel转json")
    top.geometry('480x320')
    top.resizable(width=False, height=False)
    
    
    btns1 = Tkinter.Button(top, text ="选择目标文件夹", command = choiceDirectory)
    btns1.grid(column=1, row=1)
    
    btns2 = Tkinter.Button(top, text ="选择保存文件夹", command = saveDirectory)
    btns2.grid(column=1, row=2)

    E1 = Entry(top, bd =5, textvariable=var1)
    E1.grid(column=4, row=1)

    
    E2 = Entry(top, bd =5, textvariable=var2)
    E2.grid(column=4, row=2)

    btn = Tkinter.Button(top, text ="生成json文件", command = createJson)
    btn.grid(column=3, row=8)

    btn = Tkinter.Button(top, text ="说明", command = showTips)
    btn.grid(column=5, row=9)

    var = StringVar()
    label = Label( top, textvariable=var, relief=RAISED )
    var.set("Creator is Crh\nLanguage By Python\nversion 1.0\ncrh4@foxmail.com")
    label.grid(column=1, row=0)
    


    top.mainloop()

def myMain( str1, str2 ):
    global Target_Path
    global Final_Path
    global imgfiles
    global all_json
    Target_Path = str1
    Final_Path = str2

    search_file( '.xlsx' )
    search_file( '.xls' )
    #转换执行
    for index in range(len(imgfiles)):
        data = xlrd.open_workbook(imgfiles[index])
        table = data.sheets()[0]
        jdata = xlsxChangeJson( table )

        all_json.append(jdata)
        # print jdata


    arrangement_file()

    #生成
    for index in range(len(imgfiles)):
        s1 = imgfiles[ index ][ len(Target_Path): ]
        s1 = Final_Path + '/' + s1
        numLen = len(s1) - s1.find('.xls')
        s1 = s1[:-numLen]
        s1 = s1 + '.json'
        store_to_path( s1,  all_json[ index ])
    


if __name__=="__main__":
    initUI()
    